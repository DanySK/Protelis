module protelis:coord:nonselfstabilizing:accumulation
import protelis:coord:spreading
import protelis:coord:accumulation

/**
 * Gossip a value manipulated according to f.
 *
 * @param value T, what to gossip
 * @param f     (T, T) -> T, how to manipulate value
 * @return      T the value resulting from gossip
 */
public def gossip(value, f) {
    share (_,v <- value) {
        f.apply(value, hood((a, b) -> { f.apply(a, b) }, value, v))
    }
}

/**
 * Gossip whether the device has ever experienced a given condition.
 *
 * @param a bool, condition
 * @return  bool, true if the device has experienced the condition, false otherwise
 */
public def gossipEver(a) {
    share (_,ever <- false) {
        a || anyHood(ever)
    }
}
