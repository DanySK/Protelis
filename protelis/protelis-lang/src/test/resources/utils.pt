// EXPECTED_RESULT: true
import protelis:lang:utils
//composeF(
//    composeV(
        and(
            or(not(notEqual(1, 2)), equal(1, 1)), 
            identity(
                mean(
                    sum(1, 
                        diff(1, zero())
                    ), 2
                ) == 2
            )
        )
        && equal(1, 1) && !equal(2, 1)
        && notEqual(2, 1) && !notEqual(1, 1)
        && greaterThan(2, 1) && !greaterThan(1, 1)
        && greaterEqual(2, 1) && greaterEqual(1, 1) && !greaterEqual(0, 1)
        && lessThan(0, 1) && !lessThan(1, 1)
        && !lessEqual(2, 1) && lessEqual(1, 1) && lessEqual(0, 1)
//    )
//).apply()
//    composeV(1).apply() // false
//    (() -> {1}).apply() // 1
